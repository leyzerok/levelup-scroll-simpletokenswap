{
	"id": "d4cd829ceeec5dbc8e1e2edbe04dace0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"simpletokenswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n// Import ERC20 interface for token interaction\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n// Import Uniswap V3 ISwapRouter interface\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\n\r\n// Define the contract\r\ncontract SimpleTokenSwap {\r\n\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n    // Define the WETH token address (could vary by network)\r\n    address public constant WETH9 = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n\r\n    // Constructor that initializes the Uniswap V3 router address\r\n    constructor(ISwapRouter _swapRouter) {\r\n        swapRouter = _swapRouter;\r\n    }\r\n\r\n    // Swap function: Swaps an exact input amount of tokens for as many output tokens as possible\r\n    function swapExactInputSingle(\r\n        address tokenIn,         // Address of the token to swap from\r\n        address tokenOut,        // Address of the token to swap to\r\n        uint256 amountIn,        // Amount of input token\r\n        uint256 amountOutMin,    // Minimum amount of output token to accept (slippage control)\r\n        address recipient        // Address to receive the swapped tokens\r\n    ) external returns (uint256 amountOut) {\r\n\r\n        // Transfer `amountIn` of tokenIn from the sender to this contract\r\n        IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn);\r\n\r\n        // Approve the Uniswap router to spend the input tokens on behalf of this contract\r\n        IERC20(tokenIn).approve(address(swapRouter), amountIn);\r\n\r\n        // Set the parameters for the swap using the exactInputSingle method of ISwapRouter\r\n        ISwapRouter.ExactInputSingleParams memory params =\r\n            ISwapRouter.ExactInputSingleParams({\r\n                tokenIn: tokenIn,                  // The token being swapped\r\n                tokenOut: tokenOut,                // The token to receive\r\n                fee: 3000,                         // The pool fee (e.g., 0.3%)\r\n                recipient: recipient,              // Who receives the swapped tokens\r\n                deadline: block.timestamp + 15,    // Transaction deadline, prevents frontrunning\r\n                amountIn: amountIn,                // Amount of input tokens\r\n                amountOutMinimum: amountOutMin,    // Minimum acceptable output amount\r\n                sqrtPriceLimitX96: 0               // No price limit\r\n            });\r\n\r\n        // Execute the swap and return the output amount\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n    }\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"simpletokenswap.sol": {
				"SimpleTokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simpletokenswap.sol\":310:2568  contract SimpleTokenSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"simpletokenswap.sol\":613:693  constructor(ISwapRouter _swapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"simpletokenswap.sol\":674:685  _swapRouter */\n  dup1\n    /* \"simpletokenswap.sol\":661:685  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"simpletokenswap.sol\":613:693  constructor(ISwapRouter _swapRouter) {... */\n  pop\n    /* \"simpletokenswap.sol\":310:2568  contract SimpleTokenSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"simpletokenswap.sol\":310:2568  contract SimpleTokenSwap {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x69e3c6522a2f8bf12e780ae53c30e69d48d224ea00c92026278c398148e8df91\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"simpletokenswap.sol\":310:2568  contract SimpleTokenSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x59953f16\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"simpletokenswap.sol\":454:537  address public constant WETH9 = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simpletokenswap.sol\":800:2565  function swapExactInputSingle(... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simpletokenswap.sol\":344:383  ISwapRouter public immutable swapRouter */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simpletokenswap.sol\":454:537  address public constant WETH9 = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) */\n    tag_7:\n        /* \"simpletokenswap.sol\":494:536  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"simpletokenswap.sol\":454:537  address public constant WETH9 = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) */\n      dup2\n      jump\t// out\n        /* \"simpletokenswap.sol\":800:2565  function swapExactInputSingle(... */\n    tag_13:\n        /* \"simpletokenswap.sol\":1227:1244  uint256 amountOut */\n      0x00\n        /* \"simpletokenswap.sol\":1342:1349  tokenIn */\n      dup6\n        /* \"simpletokenswap.sol\":1335:1363  IERC20(tokenIn).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"simpletokenswap.sol\":1364:1374  msg.sender */\n      caller\n        /* \"simpletokenswap.sol\":1384:1388  this */\n      address\n        /* \"simpletokenswap.sol\":1391:1399  amountIn */\n      dup8\n        /* \"simpletokenswap.sol\":1335:1400  IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      pop\n        /* \"simpletokenswap.sol\":1512:1519  tokenIn */\n      dup6\n        /* \"simpletokenswap.sol\":1505:1528  IERC20(tokenIn).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"simpletokenswap.sol\":1537:1547  swapRouter */\n      immutable(\"0x69e3c6522a2f8bf12e780ae53c30e69d48d224ea00c92026278c398148e8df91\")\n        /* \"simpletokenswap.sol\":1550:1558  amountIn */\n      dup7\n        /* \"simpletokenswap.sol\":1505:1559  IERC20(tokenIn).approve(address(swapRouter), amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      pop\n        /* \"simpletokenswap.sol\":1665:1713  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"simpletokenswap.sol\":1792:1799  tokenIn */\n      dup9\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":1872:1880  tokenOut */\n      dup8\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":1943:1947  3000 */\n      0x0bb8\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":2030:2039  recipient */\n      dup5\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":2134:2136  15 */\n      0x0f\n        /* \"simpletokenswap.sol\":2116:2131  block.timestamp */\n      timestamp\n        /* \"simpletokenswap.sol\":2116:2136  block.timestamp + 15 */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":2215:2223  amountIn */\n      dup7\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":2301:2313  amountOutMin */\n      dup6\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"simpletokenswap.sol\":2390:2391  0 */\n      0x00\n        /* \"simpletokenswap.sol\":1729:2439  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"simpletokenswap.sol\":1665:2439  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"simpletokenswap.sol\":2522:2532  swapRouter */\n      immutable(\"0x69e3c6522a2f8bf12e780ae53c30e69d48d224ea00c92026278c398148e8df91\")\n        /* \"simpletokenswap.sol\":2522:2549  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"simpletokenswap.sol\":2550:2556  params */\n      dup3\n        /* \"simpletokenswap.sol\":2522:2557  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"simpletokenswap.sol\":2510:2557  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"simpletokenswap.sol\":1246:2565  {... */\n      pop\n        /* \"simpletokenswap.sol\":800:2565  function swapExactInputSingle(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simpletokenswap.sol\":344:383  ISwapRouter public immutable swapRouter */\n    tag_17:\n      immutable(\"0x69e3c6522a2f8bf12e780ae53c30e69d48d224ea00c92026278c398148e8df91\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_40:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_41:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_71\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_40\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_42:\n        /* \"#utility.yul\":328:352   */\n      tag_73\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_41\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_75\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_42\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_44:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_46:\n        /* \"#utility.yul\":993:1017   */\n      tag_80\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_41\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_81:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_47:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_83\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_46\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1270   */\n    tag_48:\n        /* \"#utility.yul\":1230:1237   */\n      0x00\n        /* \"#utility.yul\":1259:1264   */\n      dup2\n        /* \"#utility.yul\":1248:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_49:\n        /* \"#utility.yul\":1349:1373   */\n      tag_86\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_87:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_50:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_89\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_49\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2460   */\n    tag_12:\n        /* \"#utility.yul\":1644:1650   */\n      0x00\n        /* \"#utility.yul\":1652:1658   */\n      dup1\n        /* \"#utility.yul\":1660:1666   */\n      0x00\n        /* \"#utility.yul\":1668:1674   */\n      dup1\n        /* \"#utility.yul\":1676:1682   */\n      0x00\n        /* \"#utility.yul\":1725:1728   */\n      0xa0\n        /* \"#utility.yul\":1713:1722   */\n      dup7\n        /* \"#utility.yul\":1704:1711   */\n      dup9\n        /* \"#utility.yul\":1700:1723   */\n      sub\n        /* \"#utility.yul\":1696:1729   */\n      slt\n        /* \"#utility.yul\":1693:1813   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1732:1811   */\n      tag_92\n      tag_44\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1693:1813   */\n    tag_91:\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1877:1930   */\n      tag_93\n        /* \"#utility.yul\":1922:1929   */\n      dup9\n        /* \"#utility.yul\":1913:1919   */\n      dup3\n        /* \"#utility.yul\":1902:1911   */\n      dup10\n        /* \"#utility.yul\":1898:1920   */\n      add\n        /* \"#utility.yul\":1877:1930   */\n      tag_47\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1867:1930   */\n      swap6\n      pop\n        /* \"#utility.yul\":1823:1940   */\n      pop\n        /* \"#utility.yul\":1979:1981   */\n      0x20\n        /* \"#utility.yul\":2005:2058   */\n      tag_94\n        /* \"#utility.yul\":2050:2057   */\n      dup9\n        /* \"#utility.yul\":2041:2047   */\n      dup3\n        /* \"#utility.yul\":2030:2039   */\n      dup10\n        /* \"#utility.yul\":2026:2048   */\n      add\n        /* \"#utility.yul\":2005:2058   */\n      tag_47\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1995:2058   */\n      swap5\n      pop\n        /* \"#utility.yul\":1950:2068   */\n      pop\n        /* \"#utility.yul\":2107:2109   */\n      0x40\n        /* \"#utility.yul\":2133:2186   */\n      tag_95\n        /* \"#utility.yul\":2178:2185   */\n      dup9\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup10\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_50\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2123:2186   */\n      swap4\n      pop\n        /* \"#utility.yul\":2078:2196   */\n      pop\n        /* \"#utility.yul\":2235:2237   */\n      0x60\n        /* \"#utility.yul\":2261:2314   */\n      tag_96\n        /* \"#utility.yul\":2306:2313   */\n      dup9\n        /* \"#utility.yul\":2297:2303   */\n      dup3\n        /* \"#utility.yul\":2286:2295   */\n      dup10\n        /* \"#utility.yul\":2282:2304   */\n      add\n        /* \"#utility.yul\":2261:2314   */\n      tag_50\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2251:2314   */\n      swap3\n      pop\n        /* \"#utility.yul\":2206:2324   */\n      pop\n        /* \"#utility.yul\":2363:2366   */\n      0x80\n        /* \"#utility.yul\":2390:2443   */\n      tag_97\n        /* \"#utility.yul\":2435:2442   */\n      dup9\n        /* \"#utility.yul\":2426:2432   */\n      dup3\n        /* \"#utility.yul\":2415:2424   */\n      dup10\n        /* \"#utility.yul\":2411:2433   */\n      add\n        /* \"#utility.yul\":2390:2443   */\n      tag_47\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2380:2443   */\n      swap2\n      pop\n        /* \"#utility.yul\":2334:2453   */\n      pop\n        /* \"#utility.yul\":1549:2460   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2466:2584   */\n    tag_51:\n        /* \"#utility.yul\":2553:2577   */\n      tag_99\n        /* \"#utility.yul\":2571:2576   */\n      dup2\n        /* \"#utility.yul\":2553:2577   */\n      tag_48\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2548:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2578   */\n      mstore\n        /* \"#utility.yul\":2466:2584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2590:2812   */\n    tag_15:\n        /* \"#utility.yul\":2683:2687   */\n      0x00\n        /* \"#utility.yul\":2721:2723   */\n      0x20\n        /* \"#utility.yul\":2710:2719   */\n      dup3\n        /* \"#utility.yul\":2706:2724   */\n      add\n        /* \"#utility.yul\":2698:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2734:2805   */\n      tag_101\n        /* \"#utility.yul\":2802:2803   */\n      0x00\n        /* \"#utility.yul\":2791:2800   */\n      dup4\n        /* \"#utility.yul\":2787:2804   */\n      add\n        /* \"#utility.yul\":2778:2784   */\n      dup5\n        /* \"#utility.yul\":2734:2805   */\n      tag_51\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2590:2812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2818:2878   */\n    tag_52:\n        /* \"#utility.yul\":2846:2849   */\n      0x00\n        /* \"#utility.yul\":2867:2872   */\n      dup2\n        /* \"#utility.yul\":2860:2872   */\n      swap1\n      pop\n        /* \"#utility.yul\":2818:2878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2884:3026   */\n    tag_53:\n        /* \"#utility.yul\":2934:2943   */\n      0x00\n        /* \"#utility.yul\":2967:3020   */\n      tag_104\n        /* \"#utility.yul\":2985:3019   */\n      tag_105\n        /* \"#utility.yul\":2994:3018   */\n      tag_106\n        /* \"#utility.yul\":3012:3017   */\n      dup5\n        /* \"#utility.yul\":2994:3018   */\n      tag_40\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2985:3019   */\n      tag_52\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2967:3020   */\n      tag_40\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2954:3020   */\n      swap1\n      pop\n        /* \"#utility.yul\":2884:3026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3032:3158   */\n    tag_54:\n        /* \"#utility.yul\":3082:3091   */\n      0x00\n        /* \"#utility.yul\":3115:3152   */\n      tag_108\n        /* \"#utility.yul\":3146:3151   */\n      dup3\n        /* \"#utility.yul\":3115:3152   */\n      tag_53\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3102:3152   */\n      swap1\n      pop\n        /* \"#utility.yul\":3032:3158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3309   */\n    tag_55:\n        /* \"#utility.yul\":3233:3242   */\n      0x00\n        /* \"#utility.yul\":3266:3303   */\n      tag_110\n        /* \"#utility.yul\":3297:3302   */\n      dup3\n        /* \"#utility.yul\":3266:3303   */\n      tag_54\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3253:3303   */\n      swap1\n      pop\n        /* \"#utility.yul\":3164:3309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3315:3484   */\n    tag_56:\n        /* \"#utility.yul\":3421:3477   */\n      tag_112\n        /* \"#utility.yul\":3471:3476   */\n      dup2\n        /* \"#utility.yul\":3421:3477   */\n      tag_55\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3409:3478   */\n      mstore\n        /* \"#utility.yul\":3315:3484   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3490:3750   */\n    tag_19:\n        /* \"#utility.yul\":3602:3606   */\n      0x00\n        /* \"#utility.yul\":3640:3642   */\n      0x20\n        /* \"#utility.yul\":3629:3638   */\n      dup3\n        /* \"#utility.yul\":3625:3643   */\n      add\n        /* \"#utility.yul\":3617:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3743   */\n      tag_114\n        /* \"#utility.yul\":3740:3741   */\n      0x00\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3725:3742   */\n      add\n        /* \"#utility.yul\":3716:3722   */\n      dup5\n        /* \"#utility.yul\":3653:3743   */\n      tag_56\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3490:3750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3756:4198   */\n    tag_22:\n        /* \"#utility.yul\":3905:3909   */\n      0x00\n        /* \"#utility.yul\":3943:3945   */\n      0x60\n        /* \"#utility.yul\":3932:3941   */\n      dup3\n        /* \"#utility.yul\":3928:3946   */\n      add\n        /* \"#utility.yul\":3920:3946   */\n      swap1\n      pop\n        /* \"#utility.yul\":3956:4027   */\n      tag_116\n        /* \"#utility.yul\":4024:4025   */\n      0x00\n        /* \"#utility.yul\":4013:4022   */\n      dup4\n        /* \"#utility.yul\":4009:4026   */\n      add\n        /* \"#utility.yul\":4000:4006   */\n      dup7\n        /* \"#utility.yul\":3956:4027   */\n      tag_42\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4037:4109   */\n      tag_117\n        /* \"#utility.yul\":4105:4107   */\n      0x20\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4090:4108   */\n      add\n        /* \"#utility.yul\":4081:4087   */\n      dup6\n        /* \"#utility.yul\":4037:4109   */\n      tag_42\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4119:4191   */\n      tag_118\n        /* \"#utility.yul\":4187:4189   */\n      0x40\n        /* \"#utility.yul\":4176:4185   */\n      dup4\n        /* \"#utility.yul\":4172:4190   */\n      add\n        /* \"#utility.yul\":4163:4169   */\n      dup5\n        /* \"#utility.yul\":4119:4191   */\n      tag_51\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3756:4198   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4204:4294   */\n    tag_57:\n        /* \"#utility.yul\":4238:4245   */\n      0x00\n        /* \"#utility.yul\":4281:4286   */\n      dup2\n        /* \"#utility.yul\":4274:4287   */\n      iszero\n        /* \"#utility.yul\":4267:4288   */\n      iszero\n        /* \"#utility.yul\":4256:4288   */\n      swap1\n      pop\n        /* \"#utility.yul\":4204:4294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4300:4416   */\n    tag_58:\n        /* \"#utility.yul\":4370:4391   */\n      tag_121\n        /* \"#utility.yul\":4385:4390   */\n      dup2\n        /* \"#utility.yul\":4370:4391   */\n      tag_57\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4363:4368   */\n      dup2\n        /* \"#utility.yul\":4360:4392   */\n      eq\n        /* \"#utility.yul\":4350:4410   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4406:4407   */\n      0x00\n        /* \"#utility.yul\":4403:4404   */\n      dup1\n        /* \"#utility.yul\":4396:4408   */\n      revert\n        /* \"#utility.yul\":4350:4410   */\n    tag_122:\n        /* \"#utility.yul\":4300:4416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4422:4559   */\n    tag_59:\n        /* \"#utility.yul\":4476:4481   */\n      0x00\n        /* \"#utility.yul\":4507:4513   */\n      dup2\n        /* \"#utility.yul\":4501:4514   */\n      mload\n        /* \"#utility.yul\":4492:4514   */\n      swap1\n      pop\n        /* \"#utility.yul\":4523:4553   */\n      tag_124\n        /* \"#utility.yul\":4547:4552   */\n      dup2\n        /* \"#utility.yul\":4523:4553   */\n      tag_58\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4422:4559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:4910   */\n    tag_26:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4669:4678   */\n      dup3\n        /* \"#utility.yul\":4660:4667   */\n      dup5\n        /* \"#utility.yul\":4656:4679   */\n      sub\n        /* \"#utility.yul\":4652:4684   */\n      slt\n        /* \"#utility.yul\":4649:4768   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4687:4766   */\n      tag_127\n      tag_44\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4649:4768   */\n    tag_126:\n        /* \"#utility.yul\":4807:4808   */\n      0x00\n        /* \"#utility.yul\":4832:4893   */\n      tag_128\n        /* \"#utility.yul\":4885:4892   */\n      dup5\n        /* \"#utility.yul\":4876:4882   */\n      dup3\n        /* \"#utility.yul\":4865:4874   */\n      dup6\n        /* \"#utility.yul\":4861:4883   */\n      add\n        /* \"#utility.yul\":4832:4893   */\n      tag_59\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4822:4893   */\n      swap2\n      pop\n        /* \"#utility.yul\":4778:4903   */\n      pop\n        /* \"#utility.yul\":4565:4910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4916:5248   */\n    tag_28:\n        /* \"#utility.yul\":5037:5041   */\n      0x00\n        /* \"#utility.yul\":5075:5077   */\n      0x40\n        /* \"#utility.yul\":5064:5073   */\n      dup3\n        /* \"#utility.yul\":5060:5078   */\n      add\n        /* \"#utility.yul\":5052:5078   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5159   */\n      tag_130\n        /* \"#utility.yul\":5156:5157   */\n      0x00\n        /* \"#utility.yul\":5145:5154   */\n      dup4\n        /* \"#utility.yul\":5141:5158   */\n      add\n        /* \"#utility.yul\":5132:5138   */\n      dup6\n        /* \"#utility.yul\":5088:5159   */\n      tag_42\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5169:5241   */\n      tag_131\n        /* \"#utility.yul\":5237:5239   */\n      0x20\n        /* \"#utility.yul\":5226:5235   */\n      dup4\n        /* \"#utility.yul\":5222:5240   */\n      add\n        /* \"#utility.yul\":5213:5219   */\n      dup5\n        /* \"#utility.yul\":5169:5241   */\n      tag_51\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4916:5248   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5254:5434   */\n    tag_60:\n        /* \"#utility.yul\":5302:5379   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5292:5380   */\n      mstore\n        /* \"#utility.yul\":5399:5403   */\n      0x11\n        /* \"#utility.yul\":5396:5397   */\n      0x04\n        /* \"#utility.yul\":5389:5404   */\n      mstore\n        /* \"#utility.yul\":5423:5427   */\n      0x24\n        /* \"#utility.yul\":5420:5421   */\n      0x00\n        /* \"#utility.yul\":5413:5428   */\n      revert\n        /* \"#utility.yul\":5440:5631   */\n    tag_33:\n        /* \"#utility.yul\":5480:5483   */\n      0x00\n        /* \"#utility.yul\":5499:5519   */\n      tag_134\n        /* \"#utility.yul\":5517:5518   */\n      dup3\n        /* \"#utility.yul\":5499:5519   */\n      tag_48\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5494:5519   */\n      swap2\n      pop\n        /* \"#utility.yul\":5533:5553   */\n      tag_135\n        /* \"#utility.yul\":5551:5552   */\n      dup4\n        /* \"#utility.yul\":5533:5553   */\n      tag_48\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5528:5553   */\n      swap3\n      pop\n        /* \"#utility.yul\":5576:5577   */\n      dup3\n        /* \"#utility.yul\":5573:5574   */\n      dup3\n        /* \"#utility.yul\":5569:5578   */\n      add\n        /* \"#utility.yul\":5562:5578   */\n      swap1\n      pop\n        /* \"#utility.yul\":5597:5600   */\n      dup1\n        /* \"#utility.yul\":5594:5595   */\n      dup3\n        /* \"#utility.yul\":5591:5601   */\n      gt\n        /* \"#utility.yul\":5588:5624   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":5604:5622   */\n      tag_137\n      tag_60\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5588:5624   */\n    tag_136:\n        /* \"#utility.yul\":5440:5631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5637:5745   */\n    tag_61:\n        /* \"#utility.yul\":5714:5738   */\n      tag_139\n        /* \"#utility.yul\":5732:5737   */\n      dup2\n        /* \"#utility.yul\":5714:5738   */\n      tag_41\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5709:5712   */\n      dup3\n        /* \"#utility.yul\":5702:5739   */\n      mstore\n        /* \"#utility.yul\":5637:5745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:5842   */\n    tag_62:\n        /* \"#utility.yul\":5787:5794   */\n      0x00\n        /* \"#utility.yul\":5827:5835   */\n      0xffffff\n        /* \"#utility.yul\":5820:5825   */\n      dup3\n        /* \"#utility.yul\":5816:5836   */\n      and\n        /* \"#utility.yul\":5805:5836   */\n      swap1\n      pop\n        /* \"#utility.yul\":5751:5842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5848:5953   */\n    tag_63:\n        /* \"#utility.yul\":5923:5946   */\n      tag_142\n        /* \"#utility.yul\":5940:5945   */\n      dup2\n        /* \"#utility.yul\":5923:5946   */\n      tag_62\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5918:5921   */\n      dup3\n        /* \"#utility.yul\":5911:5947   */\n      mstore\n        /* \"#utility.yul\":5848:5953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5959:6067   */\n    tag_64:\n        /* \"#utility.yul\":6036:6060   */\n      tag_144\n        /* \"#utility.yul\":6054:6059   */\n      dup2\n        /* \"#utility.yul\":6036:6060   */\n      tag_48\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6031:6034   */\n      dup3\n        /* \"#utility.yul\":6024:6061   */\n      mstore\n        /* \"#utility.yul\":5959:6067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6181   */\n    tag_65:\n        /* \"#utility.yul\":6150:6174   */\n      tag_146\n        /* \"#utility.yul\":6168:6173   */\n      dup2\n        /* \"#utility.yul\":6150:6174   */\n      tag_40\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6145:6148   */\n      dup3\n        /* \"#utility.yul\":6138:6175   */\n      mstore\n        /* \"#utility.yul\":6073:6181   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6281:7904   */\n    tag_66:\n        /* \"#utility.yul\":6456:6462   */\n      0x0100\n        /* \"#utility.yul\":6451:6454   */\n      dup3\n        /* \"#utility.yul\":6447:6463   */\n      add\n        /* \"#utility.yul\":6548:6552   */\n      0x00\n        /* \"#utility.yul\":6541:6546   */\n      dup3\n        /* \"#utility.yul\":6537:6553   */\n      add\n        /* \"#utility.yul\":6531:6554   */\n      mload\n        /* \"#utility.yul\":6567:6630   */\n      tag_148\n        /* \"#utility.yul\":6624:6628   */\n      0x00\n        /* \"#utility.yul\":6619:6622   */\n      dup6\n        /* \"#utility.yul\":6615:6629   */\n      add\n        /* \"#utility.yul\":6601:6613   */\n      dup3\n        /* \"#utility.yul\":6567:6630   */\n      tag_61\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6473:6640   */\n      pop\n        /* \"#utility.yul\":6726:6730   */\n      0x20\n        /* \"#utility.yul\":6719:6724   */\n      dup3\n        /* \"#utility.yul\":6715:6731   */\n      add\n        /* \"#utility.yul\":6709:6732   */\n      mload\n        /* \"#utility.yul\":6745:6808   */\n      tag_149\n        /* \"#utility.yul\":6802:6806   */\n      0x20\n        /* \"#utility.yul\":6797:6800   */\n      dup6\n        /* \"#utility.yul\":6793:6807   */\n      add\n        /* \"#utility.yul\":6779:6791   */\n      dup3\n        /* \"#utility.yul\":6745:6808   */\n      tag_61\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6650:6818   */\n      pop\n        /* \"#utility.yul\":6899:6903   */\n      0x40\n        /* \"#utility.yul\":6892:6897   */\n      dup3\n        /* \"#utility.yul\":6888:6904   */\n      add\n        /* \"#utility.yul\":6882:6905   */\n      mload\n        /* \"#utility.yul\":6918:6979   */\n      tag_150\n        /* \"#utility.yul\":6973:6977   */\n      0x40\n        /* \"#utility.yul\":6968:6971   */\n      dup6\n        /* \"#utility.yul\":6964:6978   */\n      add\n        /* \"#utility.yul\":6950:6962   */\n      dup3\n        /* \"#utility.yul\":6918:6979   */\n      tag_63\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6828:6989   */\n      pop\n        /* \"#utility.yul\":7076:7080   */\n      0x60\n        /* \"#utility.yul\":7069:7074   */\n      dup3\n        /* \"#utility.yul\":7065:7081   */\n      add\n        /* \"#utility.yul\":7059:7082   */\n      mload\n        /* \"#utility.yul\":7095:7158   */\n      tag_151\n        /* \"#utility.yul\":7152:7156   */\n      0x60\n        /* \"#utility.yul\":7147:7150   */\n      dup6\n        /* \"#utility.yul\":7143:7157   */\n      add\n        /* \"#utility.yul\":7129:7141   */\n      dup3\n        /* \"#utility.yul\":7095:7158   */\n      tag_61\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6999:7168   */\n      pop\n        /* \"#utility.yul\":7254:7258   */\n      0x80\n        /* \"#utility.yul\":7247:7252   */\n      dup3\n        /* \"#utility.yul\":7243:7259   */\n      add\n        /* \"#utility.yul\":7237:7260   */\n      mload\n        /* \"#utility.yul\":7273:7336   */\n      tag_152\n        /* \"#utility.yul\":7330:7334   */\n      0x80\n        /* \"#utility.yul\":7325:7328   */\n      dup6\n        /* \"#utility.yul\":7321:7335   */\n      add\n        /* \"#utility.yul\":7307:7319   */\n      dup3\n        /* \"#utility.yul\":7273:7336   */\n      tag_64\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7178:7346   */\n      pop\n        /* \"#utility.yul\":7432:7436   */\n      0xa0\n        /* \"#utility.yul\":7425:7430   */\n      dup3\n        /* \"#utility.yul\":7421:7437   */\n      add\n        /* \"#utility.yul\":7415:7438   */\n      mload\n        /* \"#utility.yul\":7451:7514   */\n      tag_153\n        /* \"#utility.yul\":7508:7512   */\n      0xa0\n        /* \"#utility.yul\":7503:7506   */\n      dup6\n        /* \"#utility.yul\":7499:7513   */\n      add\n        /* \"#utility.yul\":7485:7497   */\n      dup3\n        /* \"#utility.yul\":7451:7514   */\n      tag_64\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7356:7524   */\n      pop\n        /* \"#utility.yul\":7618:7622   */\n      0xc0\n        /* \"#utility.yul\":7611:7616   */\n      dup3\n        /* \"#utility.yul\":7607:7623   */\n      add\n        /* \"#utility.yul\":7601:7624   */\n      mload\n        /* \"#utility.yul\":7637:7700   */\n      tag_154\n        /* \"#utility.yul\":7694:7698   */\n      0xc0\n        /* \"#utility.yul\":7689:7692   */\n      dup6\n        /* \"#utility.yul\":7685:7699   */\n      add\n        /* \"#utility.yul\":7671:7683   */\n      dup3\n        /* \"#utility.yul\":7637:7700   */\n      tag_64\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7534:7710   */\n      pop\n        /* \"#utility.yul\":7805:7809   */\n      0xe0\n        /* \"#utility.yul\":7798:7803   */\n      dup3\n        /* \"#utility.yul\":7794:7810   */\n      add\n        /* \"#utility.yul\":7788:7811   */\n      mload\n        /* \"#utility.yul\":7824:7887   */\n      tag_155\n        /* \"#utility.yul\":7881:7885   */\n      0xe0\n        /* \"#utility.yul\":7876:7879   */\n      dup6\n        /* \"#utility.yul\":7872:7886   */\n      add\n        /* \"#utility.yul\":7858:7870   */\n      dup3\n        /* \"#utility.yul\":7824:7887   */\n      tag_65\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7720:7897   */\n      pop\n        /* \"#utility.yul\":6425:7904   */\n      pop\n        /* \"#utility.yul\":6281:7904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7910:8289   */\n    tag_35:\n        /* \"#utility.yul\":8081:8085   */\n      0x00\n        /* \"#utility.yul\":8119:8122   */\n      0x0100\n        /* \"#utility.yul\":8108:8117   */\n      dup3\n        /* \"#utility.yul\":8104:8123   */\n      add\n        /* \"#utility.yul\":8096:8123   */\n      swap1\n      pop\n        /* \"#utility.yul\":8133:8282   */\n      tag_157\n        /* \"#utility.yul\":8279:8280   */\n      0x00\n        /* \"#utility.yul\":8268:8277   */\n      dup4\n        /* \"#utility.yul\":8264:8281   */\n      add\n        /* \"#utility.yul\":8255:8261   */\n      dup5\n        /* \"#utility.yul\":8133:8282   */\n      tag_66\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7910:8289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8438   */\n    tag_67:\n        /* \"#utility.yul\":8352:8357   */\n      0x00\n        /* \"#utility.yul\":8383:8389   */\n      dup2\n        /* \"#utility.yul\":8377:8390   */\n      mload\n        /* \"#utility.yul\":8368:8390   */\n      swap1\n      pop\n        /* \"#utility.yul\":8399:8432   */\n      tag_159\n        /* \"#utility.yul\":8426:8431   */\n      dup2\n        /* \"#utility.yul\":8399:8432   */\n      tag_49\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8295:8438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:8795   */\n    tag_39:\n        /* \"#utility.yul\":8514:8520   */\n      0x00\n        /* \"#utility.yul\":8563:8565   */\n      0x20\n        /* \"#utility.yul\":8551:8560   */\n      dup3\n        /* \"#utility.yul\":8542:8549   */\n      dup5\n        /* \"#utility.yul\":8538:8561   */\n      sub\n        /* \"#utility.yul\":8534:8566   */\n      slt\n        /* \"#utility.yul\":8531:8650   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":8569:8648   */\n      tag_162\n      tag_44\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8531:8650   */\n    tag_161:\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8714:8778   */\n      tag_163\n        /* \"#utility.yul\":8770:8777   */\n      dup5\n        /* \"#utility.yul\":8761:8767   */\n      dup3\n        /* \"#utility.yul\":8750:8759   */\n      dup6\n        /* \"#utility.yul\":8746:8768   */\n      add\n        /* \"#utility.yul\":8714:8778   */\n      tag_67\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":8704:8778   */\n      swap2\n      pop\n        /* \"#utility.yul\":8660:8788   */\n      pop\n        /* \"#utility.yul\":8444:8795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7b222402c618dcdd6fe628628af6ba590c1dd92ff3468b0899be1628048e8cc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:4",
										"nodeType": "YulBlock",
										"src": "0:1434:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "632:51:4",
													"nodeType": "YulBlock",
													"src": "632:51:4",
													"statements": [
														{
															"nativeSrc": "642:35:4",
															"nodeType": "YulAssignment",
															"src": "642:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:4"
																},
																"nativeSrc": "653:24:4",
																"nodeType": "YulFunctionCall",
																"src": "653:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:4",
														"nodeType": "YulTypedName",
														"src": "614:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:4",
														"nodeType": "YulTypedName",
														"src": "624:7:4",
														"type": ""
													}
												],
												"src": "568:115:4"
											},
											{
												"body": {
													"nativeSrc": "751:98:4",
													"nodeType": "YulBlock",
													"src": "751:98:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:4",
																"nodeType": "YulBlock",
																"src": "827:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:4",
																					"nodeType": "YulLiteral",
																					"src": "836:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:4",
																					"nodeType": "YulLiteral",
																					"src": "839:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:4"
																			},
																			"nativeSrc": "829:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:4"
																		},
																		"nativeSrc": "829:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:4",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:4"
																				},
																				"nativeSrc": "781:43:4",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:4"
																		},
																		"nativeSrc": "771:54:4",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:4"
																},
																"nativeSrc": "764:62:4",
																"nodeType": "YulFunctionCall",
																"src": "764:62:4"
															},
															"nativeSrc": "761:82:4",
															"nodeType": "YulIf",
															"src": "761:82:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:4",
														"nodeType": "YulTypedName",
														"src": "744:5:4",
														"type": ""
													}
												],
												"src": "689:160:4"
											},
											{
												"body": {
													"nativeSrc": "937:99:4",
													"nodeType": "YulBlock",
													"src": "937:99:4",
													"statements": [
														{
															"nativeSrc": "947:22:4",
															"nodeType": "YulAssignment",
															"src": "947:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:4"
																},
																"nativeSrc": "956:13:4",
																"nodeType": "YulFunctionCall",
																"src": "956:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:4"
																},
																"nativeSrc": "978:52:4",
																"nodeType": "YulFunctionCall",
																"src": "978:52:4"
															},
															"nativeSrc": "978:52:4",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:4",
														"nodeType": "YulTypedName",
														"src": "923:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:4",
														"nodeType": "YulTypedName",
														"src": "931:5:4",
														"type": ""
													}
												],
												"src": "855:181:4"
											},
											{
												"body": {
													"nativeSrc": "1138:293:4",
													"nodeType": "YulBlock",
													"src": "1138:293:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:4",
																"nodeType": "YulBlock",
																"src": "1184:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:4"
																			},
																			"nativeSrc": "1186:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:4"
																		},
																		"nativeSrc": "1186:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:4"
																		},
																		"nativeSrc": "1155:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:4"
																},
																"nativeSrc": "1151:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:4"
															},
															"nativeSrc": "1148:119:4",
															"nodeType": "YulIf",
															"src": "1148:119:4"
														},
														{
															"nativeSrc": "1277:147:4",
															"nodeType": "YulBlock",
															"src": "1277:147:4",
															"statements": [
																{
																	"nativeSrc": "1292:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:4",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:4"
																				},
																				"nativeSrc": "1382:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1331:50:4",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:4"
																		},
																		"nativeSrc": "1331:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "1042:389:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:4",
														"nodeType": "YulTypedName",
														"src": "1108:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:4",
														"nodeType": "YulTypedName",
														"src": "1119:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:4",
														"nodeType": "YulTypedName",
														"src": "1131:6:4",
														"type": ""
													}
												],
												"src": "1042:389:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516108df3803806108df833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b6080516107b461012b5f395f81816101640152818161028c015261033101526107b45ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80634aa4a4fc1461004357806359953f1614610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b6040516100589190610392565b60405180910390f35b61007b6004803603810190610076919061040c565b6100c7565b6040516100889190610492565b60405180910390f35b61009961032f565b6040516100a69190610506565b60405180910390f35b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b5f8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016101059392919061051f565b6020604051808303815f875af1158015610121573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101459190610589565b508573ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b81526004016101a19291906105b4565b6020604051808303815f875af11580156101bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e19190610589565b505f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600f4261025d9190610608565b81526020018681526020018581526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102e39190610725565b6020604051808303815f875af11580156102ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103239190610753565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61037c82610353565b9050919050565b61038c81610372565b82525050565b5f6020820190506103a55f830184610383565b92915050565b5f80fd5b6103b881610372565b81146103c2575f80fd5b50565b5f813590506103d3816103af565b92915050565b5f819050919050565b6103eb816103d9565b81146103f5575f80fd5b50565b5f81359050610406816103e2565b92915050565b5f805f805f60a08688031215610425576104246103ab565b5b5f610432888289016103c5565b9550506020610443888289016103c5565b9450506040610454888289016103f8565b9350506060610465888289016103f8565b9250506080610476888289016103c5565b9150509295509295909350565b61048c816103d9565b82525050565b5f6020820190506104a55f830184610483565b92915050565b5f819050919050565b5f6104ce6104c96104c484610353565b6104ab565b610353565b9050919050565b5f6104df826104b4565b9050919050565b5f6104f0826104d5565b9050919050565b610500816104e6565b82525050565b5f6020820190506105195f8301846104f7565b92915050565b5f6060820190506105325f830186610383565b61053f6020830185610383565b61054c6040830184610483565b949350505050565b5f8115159050919050565b61056881610554565b8114610572575f80fd5b50565b5f815190506105838161055f565b92915050565b5f6020828403121561059e5761059d6103ab565b5b5f6105ab84828501610575565b91505092915050565b5f6040820190506105c75f830185610383565b6105d46020830184610483565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610612826103d9565b915061061d836103d9565b9250828201905080821115610635576106346105db565b5b92915050565b61064481610372565b82525050565b5f62ffffff82169050919050565b6106618161064a565b82525050565b610670816103d9565b82525050565b61067f81610353565b82525050565b61010082015f82015161069a5f85018261063b565b5060208201516106ad602085018261063b565b5060408201516106c06040850182610658565b5060608201516106d3606085018261063b565b5060808201516106e66080850182610667565b5060a08201516106f960a0850182610667565b5060c082015161070c60c0850182610667565b5060e082015161071f60e0850182610676565b50505050565b5f610100820190506107395f830184610685565b92915050565b5f8151905061074d816103e2565b92915050565b5f60208284031215610768576107676103ab565b5b5f6107758482850161073f565b9150509291505056fea2646970667358221220e7b222402c618dcdd6fe628628af6ba590c1dd92ff3468b0899be1628048e8cc64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8DF CODESIZE SUB DUP1 PUSH2 0x8DF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x7B4 PUSH2 0x12B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x164 ADD MSTORE DUP2 DUP2 PUSH2 0x28C ADD MSTORE PUSH2 0x331 ADD MSTORE PUSH2 0x7B4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x59953F16 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x121 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP3 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF TIMESTAMP PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x37C DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D3 DUP2 PUSH2 0x3AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x406 DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH2 0x424 PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x432 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x443 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x454 DUP9 DUP3 DUP10 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x465 DUP9 DUP3 DUP10 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x476 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CE PUSH2 0x4C9 PUSH2 0x4C4 DUP5 PUSH2 0x353 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4DF DUP3 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F0 DUP3 PUSH2 0x4D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x519 PUSH0 DUP4 ADD DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x532 PUSH0 DUP4 ADD DUP7 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x53F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x54C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x554 JUMP JUMPDEST DUP2 EQ PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x583 DUP2 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5AB DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C7 PUSH0 DUP4 ADD DUP6 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x5D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x612 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x61D DUP4 PUSH2 0x3D9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x5DB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x661 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x670 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x69A PUSH0 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x6AD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x6C0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x658 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x6D3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x6E6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x6F9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x70C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x71F PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x676 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x739 PUSH0 DUP4 ADD DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x768 JUMPI PUSH2 0x767 PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x775 DUP5 DUP3 DUP6 ADD PUSH2 0x73F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0x22 BLOCKHASH 0x2C PUSH2 0x8DCD 0xD6 INVALID PUSH3 0x8628AF PUSH12 0xA590C1DD92FF3468B0899BE1 PUSH3 0x8048E8 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "310:2258:3:-:0;;;613:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;674:11;661:24;;;;;;;;;;613:80;310:2258;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;310:2258:3:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH9_204": {
									"entryPoint": 175,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapExactInputSingle_282": {
									"entryPoint": 199,
									"id": 282,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@swapRouter_198": {
									"entryPoint": 815,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8798:4",
										"nodeType": "YulBlock",
										"src": "0:8798:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "633:35:4",
													"nodeType": "YulBlock",
													"src": "633:35:4",
													"statements": [
														{
															"nativeSrc": "643:19:4",
															"nodeType": "YulAssignment",
															"src": "643:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:4",
																		"nodeType": "YulLiteral",
																		"src": "659:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:4"
																},
																"nativeSrc": "653:9:4",
																"nodeType": "YulFunctionCall",
																"src": "653:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:4",
														"nodeType": "YulTypedName",
														"src": "626:6:4",
														"type": ""
													}
												],
												"src": "593:75:4"
											},
											{
												"body": {
													"nativeSrc": "763:28:4",
													"nodeType": "YulBlock",
													"src": "763:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:4",
																		"nodeType": "YulLiteral",
																		"src": "780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:4",
																		"nodeType": "YulLiteral",
																		"src": "783:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:4"
																},
																"nativeSrc": "773:12:4",
																"nodeType": "YulFunctionCall",
																"src": "773:12:4"
															},
															"nativeSrc": "773:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:4"
											},
											{
												"body": {
													"nativeSrc": "886:28:4",
													"nodeType": "YulBlock",
													"src": "886:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:4",
																		"nodeType": "YulLiteral",
																		"src": "903:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:4",
																		"nodeType": "YulLiteral",
																		"src": "906:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:4"
																},
																"nativeSrc": "896:12:4",
																"nodeType": "YulFunctionCall",
																"src": "896:12:4"
															},
															"nativeSrc": "896:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:4"
											},
											{
												"body": {
													"nativeSrc": "963:79:4",
													"nodeType": "YulBlock",
													"src": "963:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:4",
																"nodeType": "YulBlock",
																"src": "1020:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:4"
																			},
																			"nativeSrc": "1022:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:4"
																		},
																		"nativeSrc": "1022:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:4"
																				},
																				"nativeSrc": "993:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:4"
																		},
																		"nativeSrc": "983:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:4"
																},
																"nativeSrc": "976:43:4",
																"nodeType": "YulFunctionCall",
																"src": "976:43:4"
															},
															"nativeSrc": "973:63:4",
															"nodeType": "YulIf",
															"src": "973:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:4",
														"nodeType": "YulTypedName",
														"src": "956:5:4",
														"type": ""
													}
												],
												"src": "920:122:4"
											},
											{
												"body": {
													"nativeSrc": "1100:87:4",
													"nodeType": "YulBlock",
													"src": "1100:87:4",
													"statements": [
														{
															"nativeSrc": "1110:29:4",
															"nodeType": "YulAssignment",
															"src": "1110:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:4"
																},
																"nativeSrc": "1119:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:4"
																},
																"nativeSrc": "1148:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:4"
															},
															"nativeSrc": "1148:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:4",
														"nodeType": "YulTypedName",
														"src": "1078:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:4",
														"nodeType": "YulTypedName",
														"src": "1086:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:4",
														"nodeType": "YulTypedName",
														"src": "1094:5:4",
														"type": ""
													}
												],
												"src": "1048:139:4"
											},
											{
												"body": {
													"nativeSrc": "1238:32:4",
													"nodeType": "YulBlock",
													"src": "1238:32:4",
													"statements": [
														{
															"nativeSrc": "1248:16:4",
															"nodeType": "YulAssignment",
															"src": "1248:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1259:5:4",
																"nodeType": "YulIdentifier",
																"src": "1259:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1248:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1248:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1193:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1220:5:4",
														"nodeType": "YulTypedName",
														"src": "1220:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1230:7:4",
														"nodeType": "YulTypedName",
														"src": "1230:7:4",
														"type": ""
													}
												],
												"src": "1193:77:4"
											},
											{
												"body": {
													"nativeSrc": "1319:79:4",
													"nodeType": "YulBlock",
													"src": "1319:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:4",
																"nodeType": "YulBlock",
																"src": "1376:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:4"
																			},
																			"nativeSrc": "1378:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:4"
																		},
																		"nativeSrc": "1378:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:4"
																				},
																				"nativeSrc": "1349:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:4"
																		},
																		"nativeSrc": "1339:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:4"
																},
																"nativeSrc": "1332:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:4"
															},
															"nativeSrc": "1329:63:4",
															"nodeType": "YulIf",
															"src": "1329:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													}
												],
												"src": "1276:122:4"
											},
											{
												"body": {
													"nativeSrc": "1456:87:4",
													"nodeType": "YulBlock",
													"src": "1456:87:4",
													"statements": [
														{
															"nativeSrc": "1466:29:4",
															"nodeType": "YulAssignment",
															"src": "1466:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:4"
																},
																"nativeSrc": "1475:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:4"
																},
																"nativeSrc": "1504:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:4"
															},
															"nativeSrc": "1504:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:4",
														"nodeType": "YulTypedName",
														"src": "1434:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:4",
														"nodeType": "YulTypedName",
														"src": "1442:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:4",
														"nodeType": "YulTypedName",
														"src": "1450:5:4",
														"type": ""
													}
												],
												"src": "1404:139:4"
											},
											{
												"body": {
													"nativeSrc": "1683:777:4",
													"nodeType": "YulBlock",
													"src": "1683:777:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1730:83:4",
																"nodeType": "YulBlock",
																"src": "1730:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1732:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1732:77:4"
																			},
																			"nativeSrc": "1732:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:79:4"
																		},
																		"nativeSrc": "1732:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1732:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1713:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1713:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1700:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:4"
																		},
																		"nativeSrc": "1700:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1725:3:4",
																		"nodeType": "YulLiteral",
																		"src": "1725:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1696:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:4"
																},
																"nativeSrc": "1696:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1696:33:4"
															},
															"nativeSrc": "1693:120:4",
															"nodeType": "YulIf",
															"src": "1693:120:4"
														},
														{
															"nativeSrc": "1823:117:4",
															"nodeType": "YulBlock",
															"src": "1823:117:4",
															"statements": [
																{
																	"nativeSrc": "1838:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1838:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1852:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1842:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1842:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1867:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1867:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1902:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1902:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1913:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1913:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1898:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1898:3:4"
																				},
																				"nativeSrc": "1898:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1898:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1922:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1922:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1877:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1877:20:4"
																		},
																		"nativeSrc": "1877:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1867:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1867:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1950:118:4",
															"nodeType": "YulBlock",
															"src": "1950:118:4",
															"statements": [
																{
																	"nativeSrc": "1965:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1965:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1979:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1979:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1969:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1969:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1995:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1995:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2030:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2041:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2026:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:4"
																				},
																				"nativeSrc": "2026:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2050:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2005:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2005:20:4"
																		},
																		"nativeSrc": "2005:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2005:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1995:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1995:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2078:118:4",
															"nodeType": "YulBlock",
															"src": "2078:118:4",
															"statements": [
																{
																	"nativeSrc": "2093:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2107:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:4"
																				},
																				"nativeSrc": "2154:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:4"
																		},
																		"nativeSrc": "2133:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2123:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2206:118:4",
															"nodeType": "YulBlock",
															"src": "2206:118:4",
															"statements": [
																{
																	"nativeSrc": "2221:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2235:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2225:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2251:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2251:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2286:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2286:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2297:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2297:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2282:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2282:3:4"
																				},
																				"nativeSrc": "2282:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2282:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2306:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2306:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2261:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2261:20:4"
																		},
																		"nativeSrc": "2261:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2251:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2334:119:4",
															"nodeType": "YulBlock",
															"src": "2334:119:4",
															"statements": [
																{
																	"nativeSrc": "2349:17:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2349:17:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2363:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2363:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2353:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2353:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2380:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2380:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2415:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2415:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2426:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2426:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2411:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2411:3:4"
																				},
																				"nativeSrc": "2411:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2411:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2435:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2390:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2390:20:4"
																		},
																		"nativeSrc": "2390:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2390:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2380:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2380:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address",
												"nativeSrc": "1549:911:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1621:9:4",
														"nodeType": "YulTypedName",
														"src": "1621:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1632:7:4",
														"nodeType": "YulTypedName",
														"src": "1632:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1644:6:4",
														"nodeType": "YulTypedName",
														"src": "1644:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1652:6:4",
														"nodeType": "YulTypedName",
														"src": "1652:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1660:6:4",
														"nodeType": "YulTypedName",
														"src": "1660:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1668:6:4",
														"nodeType": "YulTypedName",
														"src": "1668:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1676:6:4",
														"nodeType": "YulTypedName",
														"src": "1676:6:4",
														"type": ""
													}
												],
												"src": "1549:911:4"
											},
											{
												"body": {
													"nativeSrc": "2531:53:4",
													"nodeType": "YulBlock",
													"src": "2531:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2548:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2548:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2571:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2553:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2553:17:4"
																		},
																		"nativeSrc": "2553:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2553:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2541:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:4"
																},
																"nativeSrc": "2541:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2541:37:4"
															},
															"nativeSrc": "2541:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2541:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2466:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2519:5:4",
														"nodeType": "YulTypedName",
														"src": "2519:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2526:3:4",
														"nodeType": "YulTypedName",
														"src": "2526:3:4",
														"type": ""
													}
												],
												"src": "2466:118:4"
											},
											{
												"body": {
													"nativeSrc": "2688:124:4",
													"nodeType": "YulBlock",
													"src": "2688:124:4",
													"statements": [
														{
															"nativeSrc": "2698:26:4",
															"nodeType": "YulAssignment",
															"src": "2698:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2710:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2710:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2721:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2721:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2706:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2706:3:4"
																},
																"nativeSrc": "2706:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2706:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2698:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2698:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2778:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2778:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2791:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2791:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2802:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2802:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2787:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:4"
																		},
																		"nativeSrc": "2787:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2734:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2734:43:4"
																},
																"nativeSrc": "2734:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2734:71:4"
															},
															"nativeSrc": "2734:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2734:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2590:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2660:9:4",
														"nodeType": "YulTypedName",
														"src": "2660:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2672:6:4",
														"nodeType": "YulTypedName",
														"src": "2672:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2683:4:4",
														"nodeType": "YulTypedName",
														"src": "2683:4:4",
														"type": ""
													}
												],
												"src": "2590:222:4"
											},
											{
												"body": {
													"nativeSrc": "2850:28:4",
													"nodeType": "YulBlock",
													"src": "2850:28:4",
													"statements": [
														{
															"nativeSrc": "2860:12:4",
															"nodeType": "YulAssignment",
															"src": "2860:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "2867:5:4",
																"nodeType": "YulIdentifier",
																"src": "2867:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2860:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2860:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2818:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:4",
														"nodeType": "YulTypedName",
														"src": "2836:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2846:3:4",
														"nodeType": "YulTypedName",
														"src": "2846:3:4",
														"type": ""
													}
												],
												"src": "2818:60:4"
											},
											{
												"body": {
													"nativeSrc": "2944:82:4",
													"nodeType": "YulBlock",
													"src": "2944:82:4",
													"statements": [
														{
															"nativeSrc": "2954:66:4",
															"nodeType": "YulAssignment",
															"src": "2954:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3012:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3012:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2994:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2994:17:4"
																				},
																				"nativeSrc": "2994:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2994:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2985:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "2985:8:4"
																		},
																		"nativeSrc": "2985:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2967:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2967:17:4"
																},
																"nativeSrc": "2967:53:4",
																"nodeType": "YulFunctionCall",
																"src": "2967:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2954:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2954:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2884:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2924:5:4",
														"nodeType": "YulTypedName",
														"src": "2924:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2934:9:4",
														"nodeType": "YulTypedName",
														"src": "2934:9:4",
														"type": ""
													}
												],
												"src": "2884:142:4"
											},
											{
												"body": {
													"nativeSrc": "3092:66:4",
													"nodeType": "YulBlock",
													"src": "3092:66:4",
													"statements": [
														{
															"nativeSrc": "3102:50:4",
															"nodeType": "YulAssignment",
															"src": "3102:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3146:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3146:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3115:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3115:30:4"
																},
																"nativeSrc": "3115:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3115:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3102:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3102:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3032:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3072:5:4",
														"nodeType": "YulTypedName",
														"src": "3072:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3082:9:4",
														"nodeType": "YulTypedName",
														"src": "3082:9:4",
														"type": ""
													}
												],
												"src": "3032:126:4"
											},
											{
												"body": {
													"nativeSrc": "3243:66:4",
													"nodeType": "YulBlock",
													"src": "3243:66:4",
													"statements": [
														{
															"nativeSrc": "3253:50:4",
															"nodeType": "YulAssignment",
															"src": "3253:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3297:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3297:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3266:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3266:30:4"
																},
																"nativeSrc": "3266:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3266:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3253:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3253:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "3164:145:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3223:5:4",
														"nodeType": "YulTypedName",
														"src": "3223:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3233:9:4",
														"nodeType": "YulTypedName",
														"src": "3233:9:4",
														"type": ""
													}
												],
												"src": "3164:145:4"
											},
											{
												"body": {
													"nativeSrc": "3399:85:4",
													"nodeType": "YulBlock",
													"src": "3399:85:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3416:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3471:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3471:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "3421:49:4",
																			"nodeType": "YulIdentifier",
																			"src": "3421:49:4"
																		},
																		"nativeSrc": "3421:56:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3421:56:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3409:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:4"
																},
																"nativeSrc": "3409:69:4",
																"nodeType": "YulFunctionCall",
																"src": "3409:69:4"
															},
															"nativeSrc": "3409:69:4",
															"nodeType": "YulExpressionStatement",
															"src": "3409:69:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "3315:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3387:5:4",
														"nodeType": "YulTypedName",
														"src": "3387:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3394:3:4",
														"nodeType": "YulTypedName",
														"src": "3394:3:4",
														"type": ""
													}
												],
												"src": "3315:169:4"
											},
											{
												"body": {
													"nativeSrc": "3607:143:4",
													"nodeType": "YulBlock",
													"src": "3607:143:4",
													"statements": [
														{
															"nativeSrc": "3617:26:4",
															"nodeType": "YulAssignment",
															"src": "3617:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3629:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3629:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3640:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3640:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3625:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:4"
																},
																"nativeSrc": "3625:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3625:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3617:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3617:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3716:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3716:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3740:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3740:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3725:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3725:3:4"
																		},
																		"nativeSrc": "3725:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3725:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "3653:62:4",
																	"nodeType": "YulIdentifier",
																	"src": "3653:62:4"
																},
																"nativeSrc": "3653:90:4",
																"nodeType": "YulFunctionCall",
																"src": "3653:90:4"
															},
															"nativeSrc": "3653:90:4",
															"nodeType": "YulExpressionStatement",
															"src": "3653:90:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "3490:260:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3579:9:4",
														"nodeType": "YulTypedName",
														"src": "3579:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3591:6:4",
														"nodeType": "YulTypedName",
														"src": "3591:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3602:4:4",
														"nodeType": "YulTypedName",
														"src": "3602:4:4",
														"type": ""
													}
												],
												"src": "3490:260:4"
											},
											{
												"body": {
													"nativeSrc": "3910:288:4",
													"nodeType": "YulBlock",
													"src": "3910:288:4",
													"statements": [
														{
															"nativeSrc": "3920:26:4",
															"nodeType": "YulAssignment",
															"src": "3920:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3928:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:4"
																},
																"nativeSrc": "3928:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3928:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3920:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3920:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4000:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4000:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4013:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4013:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4024:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4024:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4009:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:4"
																		},
																		"nativeSrc": "4009:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3956:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3956:43:4"
																},
																"nativeSrc": "3956:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3956:71:4"
															},
															"nativeSrc": "3956:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3956:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4081:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4094:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4105:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4090:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:4"
																		},
																		"nativeSrc": "4090:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4037:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4037:43:4"
																},
																"nativeSrc": "4037:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4037:72:4"
															},
															"nativeSrc": "4037:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4037:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4163:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4163:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4176:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4187:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4172:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:4"
																		},
																		"nativeSrc": "4172:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4119:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4119:43:4"
																},
																"nativeSrc": "4119:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4119:72:4"
															},
															"nativeSrc": "4119:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4119:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3756:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3866:9:4",
														"nodeType": "YulTypedName",
														"src": "3866:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3878:6:4",
														"nodeType": "YulTypedName",
														"src": "3878:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3886:6:4",
														"nodeType": "YulTypedName",
														"src": "3886:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3894:6:4",
														"nodeType": "YulTypedName",
														"src": "3894:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3905:4:4",
														"nodeType": "YulTypedName",
														"src": "3905:4:4",
														"type": ""
													}
												],
												"src": "3756:442:4"
											},
											{
												"body": {
													"nativeSrc": "4246:48:4",
													"nodeType": "YulBlock",
													"src": "4246:48:4",
													"statements": [
														{
															"nativeSrc": "4256:32:4",
															"nodeType": "YulAssignment",
															"src": "4256:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4281:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4281:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4274:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4274:6:4"
																		},
																		"nativeSrc": "4274:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4274:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4267:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:4"
																},
																"nativeSrc": "4267:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4267:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4256:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4256:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4204:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4228:5:4",
														"nodeType": "YulTypedName",
														"src": "4228:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4238:7:4",
														"nodeType": "YulTypedName",
														"src": "4238:7:4",
														"type": ""
													}
												],
												"src": "4204:90:4"
											},
											{
												"body": {
													"nativeSrc": "4340:76:4",
													"nodeType": "YulBlock",
													"src": "4340:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4394:16:4",
																"nodeType": "YulBlock",
																"src": "4394:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4403:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4403:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4406:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4406:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4396:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4396:6:4"
																			},
																			"nativeSrc": "4396:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4396:12:4"
																		},
																		"nativeSrc": "4396:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4396:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4363:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4385:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4385:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4370:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "4370:14:4"
																				},
																				"nativeSrc": "4370:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4360:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4360:2:4"
																		},
																		"nativeSrc": "4360:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4353:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:4"
																},
																"nativeSrc": "4353:40:4",
																"nodeType": "YulFunctionCall",
																"src": "4353:40:4"
															},
															"nativeSrc": "4350:60:4",
															"nodeType": "YulIf",
															"src": "4350:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4300:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4333:5:4",
														"nodeType": "YulTypedName",
														"src": "4333:5:4",
														"type": ""
													}
												],
												"src": "4300:116:4"
											},
											{
												"body": {
													"nativeSrc": "4482:77:4",
													"nodeType": "YulBlock",
													"src": "4482:77:4",
													"statements": [
														{
															"nativeSrc": "4492:22:4",
															"nodeType": "YulAssignment",
															"src": "4492:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4507:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4507:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4501:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4501:5:4"
																},
																"nativeSrc": "4501:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4501:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4492:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4492:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4547:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4547:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4523:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "4523:23:4"
																},
																"nativeSrc": "4523:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4523:30:4"
															},
															"nativeSrc": "4523:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "4523:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4422:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4460:6:4",
														"nodeType": "YulTypedName",
														"src": "4460:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4468:3:4",
														"nodeType": "YulTypedName",
														"src": "4468:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4476:5:4",
														"nodeType": "YulTypedName",
														"src": "4476:5:4",
														"type": ""
													}
												],
												"src": "4422:137:4"
											},
											{
												"body": {
													"nativeSrc": "4639:271:4",
													"nodeType": "YulBlock",
													"src": "4639:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4685:83:4",
																"nodeType": "YulBlock",
																"src": "4685:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4687:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4687:77:4"
																			},
																			"nativeSrc": "4687:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4687:79:4"
																		},
																		"nativeSrc": "4687:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4687:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4660:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4660:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4669:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4656:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:4"
																		},
																		"nativeSrc": "4656:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4652:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4652:3:4"
																},
																"nativeSrc": "4652:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4652:32:4"
															},
															"nativeSrc": "4649:119:4",
															"nodeType": "YulIf",
															"src": "4649:119:4"
														},
														{
															"nativeSrc": "4778:125:4",
															"nodeType": "YulBlock",
															"src": "4778:125:4",
															"statements": [
																{
																	"nativeSrc": "4793:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4793:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4807:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4807:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4797:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4797:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4822:71:4",
																	"nodeType": "YulAssignment",
																	"src": "4822:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4865:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4865:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4876:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4876:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4861:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4861:3:4"
																				},
																				"nativeSrc": "4861:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4861:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4885:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4885:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4832:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "4832:28:4"
																		},
																		"nativeSrc": "4832:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4822:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4822:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4565:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:4",
														"nodeType": "YulTypedName",
														"src": "4609:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:4",
														"nodeType": "YulTypedName",
														"src": "4620:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:4",
														"nodeType": "YulTypedName",
														"src": "4632:6:4",
														"type": ""
													}
												],
												"src": "4565:345:4"
											},
											{
												"body": {
													"nativeSrc": "5042:206:4",
													"nodeType": "YulBlock",
													"src": "5042:206:4",
													"statements": [
														{
															"nativeSrc": "5052:26:4",
															"nodeType": "YulAssignment",
															"src": "5052:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5064:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5064:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5075:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5075:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5060:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:4"
																},
																"nativeSrc": "5060:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5060:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5052:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5052:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5132:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5132:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5145:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5145:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5156:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5156:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5141:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5141:3:4"
																		},
																		"nativeSrc": "5141:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5141:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5088:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5088:43:4"
																},
																"nativeSrc": "5088:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5088:71:4"
															},
															"nativeSrc": "5088:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5088:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5213:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5213:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5226:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5237:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:4"
																		},
																		"nativeSrc": "5222:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5169:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5169:43:4"
																},
																"nativeSrc": "5169:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5169:72:4"
															},
															"nativeSrc": "5169:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5169:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4916:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5006:9:4",
														"nodeType": "YulTypedName",
														"src": "5006:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5018:6:4",
														"nodeType": "YulTypedName",
														"src": "5018:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5026:6:4",
														"nodeType": "YulTypedName",
														"src": "5026:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5037:4:4",
														"nodeType": "YulTypedName",
														"src": "5037:4:4",
														"type": ""
													}
												],
												"src": "4916:332:4"
											},
											{
												"body": {
													"nativeSrc": "5282:152:4",
													"nodeType": "YulBlock",
													"src": "5282:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5299:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5299:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5302:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5302:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5292:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:4"
																},
																"nativeSrc": "5292:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5292:88:4"
															},
															"nativeSrc": "5292:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5292:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5396:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5396:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5399:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5399:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5389:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:4"
																},
																"nativeSrc": "5389:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5389:15:4"
															},
															"nativeSrc": "5389:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5389:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5420:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5420:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5423:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5423:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5413:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:4"
																},
																"nativeSrc": "5413:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5413:15:4"
															},
															"nativeSrc": "5413:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5413:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5254:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5254:180:4"
											},
											{
												"body": {
													"nativeSrc": "5484:147:4",
													"nodeType": "YulBlock",
													"src": "5484:147:4",
													"statements": [
														{
															"nativeSrc": "5494:25:4",
															"nodeType": "YulAssignment",
															"src": "5494:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5517:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5517:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5499:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5499:17:4"
																},
																"nativeSrc": "5499:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5499:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5494:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5494:1:4"
																}
															]
														},
														{
															"nativeSrc": "5528:25:4",
															"nodeType": "YulAssignment",
															"src": "5528:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5551:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5551:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5533:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5533:17:4"
																},
																"nativeSrc": "5533:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5533:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5528:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5528:1:4"
																}
															]
														},
														{
															"nativeSrc": "5562:16:4",
															"nodeType": "YulAssignment",
															"src": "5562:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5573:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5573:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5576:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5576:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5569:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5569:3:4"
																},
																"nativeSrc": "5569:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5569:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5562:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5602:22:4",
																"nodeType": "YulBlock",
																"src": "5602:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5604:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5604:16:4"
																			},
																			"nativeSrc": "5604:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5604:18:4"
																		},
																		"nativeSrc": "5604:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5604:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5594:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5594:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5597:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5597:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5591:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5591:2:4"
																},
																"nativeSrc": "5591:10:4",
																"nodeType": "YulFunctionCall",
																"src": "5591:10:4"
															},
															"nativeSrc": "5588:36:4",
															"nodeType": "YulIf",
															"src": "5588:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5440:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5471:1:4",
														"nodeType": "YulTypedName",
														"src": "5471:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5474:1:4",
														"nodeType": "YulTypedName",
														"src": "5474:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5480:3:4",
														"nodeType": "YulTypedName",
														"src": "5480:3:4",
														"type": ""
													}
												],
												"src": "5440:191:4"
											},
											{
												"body": {
													"nativeSrc": "5692:53:4",
													"nodeType": "YulBlock",
													"src": "5692:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5709:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5709:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5732:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5732:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5714:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "5714:17:4"
																		},
																		"nativeSrc": "5714:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5702:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:4"
																},
																"nativeSrc": "5702:37:4",
																"nodeType": "YulFunctionCall",
																"src": "5702:37:4"
															},
															"nativeSrc": "5702:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "5702:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5637:108:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5680:5:4",
														"nodeType": "YulTypedName",
														"src": "5680:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5687:3:4",
														"nodeType": "YulTypedName",
														"src": "5687:3:4",
														"type": ""
													}
												],
												"src": "5637:108:4"
											},
											{
												"body": {
													"nativeSrc": "5795:47:4",
													"nodeType": "YulBlock",
													"src": "5795:47:4",
													"statements": [
														{
															"nativeSrc": "5805:31:4",
															"nodeType": "YulAssignment",
															"src": "5805:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5820:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5820:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5827:8:4",
																		"nodeType": "YulLiteral",
																		"src": "5827:8:4",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5816:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5816:3:4"
																},
																"nativeSrc": "5816:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5816:20:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5805:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5805:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "5751:91:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5777:5:4",
														"nodeType": "YulTypedName",
														"src": "5777:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5787:7:4",
														"nodeType": "YulTypedName",
														"src": "5787:7:4",
														"type": ""
													}
												],
												"src": "5751:91:4"
											},
											{
												"body": {
													"nativeSrc": "5901:52:4",
													"nodeType": "YulBlock",
													"src": "5901:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5918:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5918:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5940:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5940:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "5923:16:4",
																			"nodeType": "YulIdentifier",
																			"src": "5923:16:4"
																		},
																		"nativeSrc": "5923:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5911:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:4"
																},
																"nativeSrc": "5911:36:4",
																"nodeType": "YulFunctionCall",
																"src": "5911:36:4"
															},
															"nativeSrc": "5911:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "5911:36:4"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "5848:105:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5889:5:4",
														"nodeType": "YulTypedName",
														"src": "5889:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5896:3:4",
														"nodeType": "YulTypedName",
														"src": "5896:3:4",
														"type": ""
													}
												],
												"src": "5848:105:4"
											},
											{
												"body": {
													"nativeSrc": "6014:53:4",
													"nodeType": "YulBlock",
													"src": "6014:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6031:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6031:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6054:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6054:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6036:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "6036:17:4"
																		},
																		"nativeSrc": "6036:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6024:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:4"
																},
																"nativeSrc": "6024:37:4",
																"nodeType": "YulFunctionCall",
																"src": "6024:37:4"
															},
															"nativeSrc": "6024:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "6024:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5959:108:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6002:5:4",
														"nodeType": "YulTypedName",
														"src": "6002:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6009:3:4",
														"nodeType": "YulTypedName",
														"src": "6009:3:4",
														"type": ""
													}
												],
												"src": "5959:108:4"
											},
											{
												"body": {
													"nativeSrc": "6128:53:4",
													"nodeType": "YulBlock",
													"src": "6128:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6145:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6168:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6168:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "6150:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "6150:17:4"
																		},
																		"nativeSrc": "6150:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6150:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:4"
																},
																"nativeSrc": "6138:37:4",
																"nodeType": "YulFunctionCall",
																"src": "6138:37:4"
															},
															"nativeSrc": "6138:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "6138:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "6073:108:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6116:5:4",
														"nodeType": "YulTypedName",
														"src": "6116:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6123:3:4",
														"nodeType": "YulTypedName",
														"src": "6123:3:4",
														"type": ""
													}
												],
												"src": "6073:108:4"
											},
											{
												"body": {
													"nativeSrc": "6425:1479:4",
													"nodeType": "YulBlock",
													"src": "6425:1479:4",
													"statements": [
														{
															"nativeSrc": "6435:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6435:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6451:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6451:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:6:4",
																		"nodeType": "YulLiteral",
																		"src": "6456:6:4",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6447:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6447:3:4"
																},
																"nativeSrc": "6447:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6447:16:4"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6439:4:4",
																	"nodeType": "YulTypedName",
																	"src": "6439:4:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6473:167:4",
															"nodeType": "YulBlock",
															"src": "6473:167:4",
															"statements": [
																{
																	"nativeSrc": "6511:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6511:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6541:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6541:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6548:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6548:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6537:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6537:3:4"
																				},
																				"nativeSrc": "6537:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6537:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6531:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6531:5:4"
																		},
																		"nativeSrc": "6531:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6515:12:4",
																			"nodeType": "YulTypedName",
																			"src": "6515:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6601:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "6601:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6619:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6619:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6624:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6624:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6615:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6615:3:4"
																				},
																				"nativeSrc": "6615:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6615:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6567:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "6567:33:4"
																		},
																		"nativeSrc": "6567:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:63:4"
																	},
																	"nativeSrc": "6567:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "6567:63:4"
																}
															]
														},
														{
															"nativeSrc": "6650:168:4",
															"nodeType": "YulBlock",
															"src": "6650:168:4",
															"statements": [
																{
																	"nativeSrc": "6689:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6689:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6719:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6719:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6726:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6726:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6715:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6715:3:4"
																				},
																				"nativeSrc": "6715:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6715:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6709:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6709:5:4"
																		},
																		"nativeSrc": "6709:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6709:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6693:12:4",
																			"nodeType": "YulTypedName",
																			"src": "6693:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6779:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "6779:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6797:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6797:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6802:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6802:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6793:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6793:3:4"
																				},
																				"nativeSrc": "6793:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6793:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6745:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "6745:33:4"
																		},
																		"nativeSrc": "6745:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6745:63:4"
																	},
																	"nativeSrc": "6745:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "6745:63:4"
																}
															]
														},
														{
															"nativeSrc": "6828:161:4",
															"nodeType": "YulBlock",
															"src": "6828:161:4",
															"statements": [
																{
																	"nativeSrc": "6862:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6862:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6892:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6892:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6899:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6899:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6888:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6888:3:4"
																				},
																				"nativeSrc": "6888:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6888:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6882:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6882:5:4"
																		},
																		"nativeSrc": "6882:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6882:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6866:12:4",
																			"nodeType": "YulTypedName",
																			"src": "6866:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6950:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "6950:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6968:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6968:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6973:4:4",
																						"nodeType": "YulLiteral",
																						"src": "6973:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6964:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6964:3:4"
																				},
																				"nativeSrc": "6964:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6964:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "6918:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "6918:31:4"
																		},
																		"nativeSrc": "6918:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6918:61:4"
																	},
																	"nativeSrc": "6918:61:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "6918:61:4"
																}
															]
														},
														{
															"nativeSrc": "6999:169:4",
															"nodeType": "YulBlock",
															"src": "6999:169:4",
															"statements": [
																{
																	"nativeSrc": "7039:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7039:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7069:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7069:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7076:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7076:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7065:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7065:3:4"
																				},
																				"nativeSrc": "7065:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7065:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7059:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7059:5:4"
																		},
																		"nativeSrc": "7059:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7043:12:4",
																			"nodeType": "YulTypedName",
																			"src": "7043:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7129:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "7129:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7147:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7147:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7152:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7152:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7143:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7143:3:4"
																				},
																				"nativeSrc": "7143:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7143:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7095:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "7095:33:4"
																		},
																		"nativeSrc": "7095:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7095:63:4"
																	},
																	"nativeSrc": "7095:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "7095:63:4"
																}
															]
														},
														{
															"nativeSrc": "7178:168:4",
															"nodeType": "YulBlock",
															"src": "7178:168:4",
															"statements": [
																{
																	"nativeSrc": "7217:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7217:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7247:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7247:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7254:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7254:4:4",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7243:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7243:3:4"
																				},
																				"nativeSrc": "7243:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7243:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7237:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7237:5:4"
																		},
																		"nativeSrc": "7237:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7221:12:4",
																			"nodeType": "YulTypedName",
																			"src": "7221:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7307:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "7307:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7325:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7325:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7330:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7330:4:4",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7321:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7321:3:4"
																				},
																				"nativeSrc": "7321:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7321:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7273:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "7273:33:4"
																		},
																		"nativeSrc": "7273:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7273:63:4"
																	},
																	"nativeSrc": "7273:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "7273:63:4"
																}
															]
														},
														{
															"nativeSrc": "7356:168:4",
															"nodeType": "YulBlock",
															"src": "7356:168:4",
															"statements": [
																{
																	"nativeSrc": "7395:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7395:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7425:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7425:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7432:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7432:4:4",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7421:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7421:3:4"
																				},
																				"nativeSrc": "7421:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7421:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7415:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7415:5:4"
																		},
																		"nativeSrc": "7415:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7415:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7399:12:4",
																			"nodeType": "YulTypedName",
																			"src": "7399:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7485:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "7485:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7503:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7503:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7508:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7508:4:4",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7499:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7499:3:4"
																				},
																				"nativeSrc": "7499:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7499:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7451:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "7451:33:4"
																		},
																		"nativeSrc": "7451:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:63:4"
																	},
																	"nativeSrc": "7451:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "7451:63:4"
																}
															]
														},
														{
															"nativeSrc": "7534:176:4",
															"nodeType": "YulBlock",
															"src": "7534:176:4",
															"statements": [
																{
																	"nativeSrc": "7581:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7611:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7611:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7618:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7618:4:4",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7607:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7607:3:4"
																				},
																				"nativeSrc": "7607:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7607:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7601:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7601:5:4"
																		},
																		"nativeSrc": "7601:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7601:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7585:12:4",
																			"nodeType": "YulTypedName",
																			"src": "7585:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7671:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "7671:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7689:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7689:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7694:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7694:4:4",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7685:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7685:3:4"
																				},
																				"nativeSrc": "7685:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7685:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7637:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "7637:33:4"
																		},
																		"nativeSrc": "7637:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:63:4"
																	},
																	"nativeSrc": "7637:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "7637:63:4"
																}
															]
														},
														{
															"nativeSrc": "7720:177:4",
															"nodeType": "YulBlock",
															"src": "7720:177:4",
															"statements": [
																{
																	"nativeSrc": "7768:43:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7768:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7798:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7798:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7805:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7805:4:4",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7794:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7794:3:4"
																				},
																				"nativeSrc": "7794:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7794:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7788:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7788:5:4"
																		},
																		"nativeSrc": "7788:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7772:12:4",
																			"nodeType": "YulTypedName",
																			"src": "7772:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7858:12:4",
																				"nodeType": "YulIdentifier",
																				"src": "7858:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7876:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7876:3:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7881:4:4",
																						"nodeType": "YulLiteral",
																						"src": "7881:4:4",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7872:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7872:3:4"
																				},
																				"nativeSrc": "7872:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7872:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "7824:33:4",
																			"nodeType": "YulIdentifier",
																			"src": "7824:33:4"
																		},
																		"nativeSrc": "7824:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7824:63:4"
																	},
																	"nativeSrc": "7824:63:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "7824:63:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "6281:1623:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6412:5:4",
														"nodeType": "YulTypedName",
														"src": "6412:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6419:3:4",
														"nodeType": "YulTypedName",
														"src": "6419:3:4",
														"type": ""
													}
												],
												"src": "6281:1623:4"
											},
											{
												"body": {
													"nativeSrc": "8086:203:4",
													"nodeType": "YulBlock",
													"src": "8086:203:4",
													"statements": [
														{
															"nativeSrc": "8096:27:4",
															"nodeType": "YulAssignment",
															"src": "8096:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8108:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8108:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8119:3:4",
																		"nodeType": "YulLiteral",
																		"src": "8119:3:4",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8104:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8104:3:4"
																},
																"nativeSrc": "8104:19:4",
																"nodeType": "YulFunctionCall",
																"src": "8104:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8096:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8096:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8255:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8255:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8268:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8268:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8279:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8279:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8264:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:4"
																		},
																		"nativeSrc": "8264:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8264:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "8133:121:4",
																	"nodeType": "YulIdentifier",
																	"src": "8133:121:4"
																},
																"nativeSrc": "8133:149:4",
																"nodeType": "YulFunctionCall",
																"src": "8133:149:4"
															},
															"nativeSrc": "8133:149:4",
															"nodeType": "YulExpressionStatement",
															"src": "8133:149:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "7910:379:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8058:9:4",
														"nodeType": "YulTypedName",
														"src": "8058:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8070:6:4",
														"nodeType": "YulTypedName",
														"src": "8070:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8081:4:4",
														"nodeType": "YulTypedName",
														"src": "8081:4:4",
														"type": ""
													}
												],
												"src": "7910:379:4"
											},
											{
												"body": {
													"nativeSrc": "8358:80:4",
													"nodeType": "YulBlock",
													"src": "8358:80:4",
													"statements": [
														{
															"nativeSrc": "8368:22:4",
															"nodeType": "YulAssignment",
															"src": "8368:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8383:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8383:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8377:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8377:5:4"
																},
																"nativeSrc": "8377:13:4",
																"nodeType": "YulFunctionCall",
																"src": "8377:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8368:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8368:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8426:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8426:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8399:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "8399:26:4"
																},
																"nativeSrc": "8399:33:4",
																"nodeType": "YulFunctionCall",
																"src": "8399:33:4"
															},
															"nativeSrc": "8399:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "8399:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8295:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8336:6:4",
														"nodeType": "YulTypedName",
														"src": "8336:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8344:3:4",
														"nodeType": "YulTypedName",
														"src": "8344:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8352:5:4",
														"nodeType": "YulTypedName",
														"src": "8352:5:4",
														"type": ""
													}
												],
												"src": "8295:143:4"
											},
											{
												"body": {
													"nativeSrc": "8521:274:4",
													"nodeType": "YulBlock",
													"src": "8521:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8567:83:4",
																"nodeType": "YulBlock",
																"src": "8567:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8569:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "8569:77:4"
																			},
																			"nativeSrc": "8569:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8569:79:4"
																		},
																		"nativeSrc": "8569:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8569:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8542:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "8542:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8551:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8551:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8538:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:4"
																		},
																		"nativeSrc": "8538:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8538:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8563:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8563:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8534:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:4"
																},
																"nativeSrc": "8534:32:4",
																"nodeType": "YulFunctionCall",
																"src": "8534:32:4"
															},
															"nativeSrc": "8531:119:4",
															"nodeType": "YulIf",
															"src": "8531:119:4"
														},
														{
															"nativeSrc": "8660:128:4",
															"nodeType": "YulBlock",
															"src": "8660:128:4",
															"statements": [
																{
																	"nativeSrc": "8675:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8675:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8689:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8679:6:4",
																			"nodeType": "YulTypedName",
																			"src": "8679:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8704:74:4",
																	"nodeType": "YulAssignment",
																	"src": "8704:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8750:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "8750:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8761:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "8761:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8746:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8746:3:4"
																				},
																				"nativeSrc": "8746:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "8746:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8770:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "8770:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8714:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "8714:31:4"
																		},
																		"nativeSrc": "8714:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8714:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8704:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "8704:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8444:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8491:9:4",
														"nodeType": "YulTypedName",
														"src": "8491:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8502:7:4",
														"nodeType": "YulTypedName",
														"src": "8502:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8514:6:4",
														"nodeType": "YulTypedName",
														"src": "8514:6:4",
														"type": ""
													}
												],
												"src": "8444:351:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"198": [
									{
										"length": 32,
										"start": 356
									},
									{
										"length": 32,
										"start": 652
									},
									{
										"length": 32,
										"start": 817
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80634aa4a4fc1461004357806359953f1614610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b6040516100589190610392565b60405180910390f35b61007b6004803603810190610076919061040c565b6100c7565b6040516100889190610492565b60405180910390f35b61009961032f565b6040516100a69190610506565b60405180910390f35b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b5f8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016101059392919061051f565b6020604051808303815f875af1158015610121573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101459190610589565b508573ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b81526004016101a19291906105b4565b6020604051808303815f875af11580156101bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e19190610589565b505f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600f4261025d9190610608565b81526020018681526020018581526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102e39190610725565b6020604051808303815f875af11580156102ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103239190610753565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61037c82610353565b9050919050565b61038c81610372565b82525050565b5f6020820190506103a55f830184610383565b92915050565b5f80fd5b6103b881610372565b81146103c2575f80fd5b50565b5f813590506103d3816103af565b92915050565b5f819050919050565b6103eb816103d9565b81146103f5575f80fd5b50565b5f81359050610406816103e2565b92915050565b5f805f805f60a08688031215610425576104246103ab565b5b5f610432888289016103c5565b9550506020610443888289016103c5565b9450506040610454888289016103f8565b9350506060610465888289016103f8565b9250506080610476888289016103c5565b9150509295509295909350565b61048c816103d9565b82525050565b5f6020820190506104a55f830184610483565b92915050565b5f819050919050565b5f6104ce6104c96104c484610353565b6104ab565b610353565b9050919050565b5f6104df826104b4565b9050919050565b5f6104f0826104d5565b9050919050565b610500816104e6565b82525050565b5f6020820190506105195f8301846104f7565b92915050565b5f6060820190506105325f830186610383565b61053f6020830185610383565b61054c6040830184610483565b949350505050565b5f8115159050919050565b61056881610554565b8114610572575f80fd5b50565b5f815190506105838161055f565b92915050565b5f6020828403121561059e5761059d6103ab565b5b5f6105ab84828501610575565b91505092915050565b5f6040820190506105c75f830185610383565b6105d46020830184610483565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610612826103d9565b915061061d836103d9565b9250828201905080821115610635576106346105db565b5b92915050565b61064481610372565b82525050565b5f62ffffff82169050919050565b6106618161064a565b82525050565b610670816103d9565b82525050565b61067f81610353565b82525050565b61010082015f82015161069a5f85018261063b565b5060208201516106ad602085018261063b565b5060408201516106c06040850182610658565b5060608201516106d3606085018261063b565b5060808201516106e66080850182610667565b5060a08201516106f960a0850182610667565b5060c082015161070c60c0850182610667565b5060e082015161071f60e0850182610676565b50505050565b5f610100820190506107395f830184610685565b92915050565b5f8151905061074d816103e2565b92915050565b5f60208284031215610768576107676103ab565b5b5f6107758482850161073f565b9150509291505056fea2646970667358221220e7b222402c618dcdd6fe628628af6ba590c1dd92ff3468b0899be1628048e8cc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x59953F16 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x121 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP3 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF TIMESTAMP PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x37C DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D3 DUP2 PUSH2 0x3AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x406 DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH2 0x424 PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x432 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x443 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x454 DUP9 DUP3 DUP10 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x465 DUP9 DUP3 DUP10 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x476 DUP9 DUP3 DUP10 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CE PUSH2 0x4C9 PUSH2 0x4C4 DUP5 PUSH2 0x353 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4DF DUP3 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F0 DUP3 PUSH2 0x4D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x519 PUSH0 DUP4 ADD DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x532 PUSH0 DUP4 ADD DUP7 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x53F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x54C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x554 JUMP JUMPDEST DUP2 EQ PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x583 DUP2 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5AB DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C7 PUSH0 DUP4 ADD DUP6 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x5D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x612 DUP3 PUSH2 0x3D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x61D DUP4 PUSH2 0x3D9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x5DB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x661 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x670 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x69A PUSH0 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x6AD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x6C0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x658 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x6D3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x6E6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x6F9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x70C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x667 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x71F PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x676 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x739 PUSH0 DUP4 ADD DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x768 JUMPI PUSH2 0x767 PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x775 DUP5 DUP3 DUP6 ADD PUSH2 0x73F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0x22 BLOCKHASH 0x2C PUSH2 0x8DCD 0xD6 INVALID PUSH3 0x8628AF PUSH12 0xA590C1DD92FF3468B0899BE1 PUSH3 0x8048E8 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "310:2258:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:1765;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:83;494:42;454:83;:::o;800:1765::-;1227:17;1342:7;1335:28;;;1364:10;1384:4;1391:8;1335:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1512:7;1505:23;;;1537:10;1550:8;1505:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1665:48;1729:710;;;;;;;;1792:7;1729:710;;;;;;1872:8;1729:710;;;;;;1943:4;1729:710;;;;;;2030:9;1729:710;;;;;;2134:2;2116:15;:20;;;;:::i;:::-;1729:710;;;;2215:8;1729:710;;;;2301:12;1729:710;;;;2390:1;1729:710;;;;;1665:774;;2522:10;:27;;;2550:6;2522:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2510:47;;1246:1319;800:1765;;;;;;;:::o;344:39::-;;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:911::-;1644:6;1652;1660;1668;1676;1725:3;1713:9;1704:7;1700:23;1696:33;1693:120;;;1732:79;;:::i;:::-;1693:120;1852:1;1877:53;1922:7;1913:6;1902:9;1898:22;1877:53;:::i;:::-;1867:63;;1823:117;1979:2;2005:53;2050:7;2041:6;2030:9;2026:22;2005:53;:::i;:::-;1995:63;;1950:118;2107:2;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2078:118;2235:2;2261:53;2306:7;2297:6;2286:9;2282:22;2261:53;:::i;:::-;2251:63;;2206:118;2363:3;2390:53;2435:7;2426:6;2415:9;2411:22;2390:53;:::i;:::-;2380:63;;2334:119;1549:911;;;;;;;;:::o;2466:118::-;2553:24;2571:5;2553:24;:::i;:::-;2548:3;2541:37;2466:118;;:::o;2590:222::-;2683:4;2721:2;2710:9;2706:18;2698:26;;2734:71;2802:1;2791:9;2787:17;2778:6;2734:71;:::i;:::-;2590:222;;;;:::o;2818:60::-;2846:3;2867:5;2860:12;;2818:60;;;:::o;2884:142::-;2934:9;2967:53;2985:34;2994:24;3012:5;2994:24;:::i;:::-;2985:34;:::i;:::-;2967:53;:::i;:::-;2954:66;;2884:142;;;:::o;3032:126::-;3082:9;3115:37;3146:5;3115:37;:::i;:::-;3102:50;;3032:126;;;:::o;3164:145::-;3233:9;3266:37;3297:5;3266:37;:::i;:::-;3253:50;;3164:145;;;:::o;3315:169::-;3421:56;3471:5;3421:56;:::i;:::-;3416:3;3409:69;3315:169;;:::o;3490:260::-;3602:4;3640:2;3629:9;3625:18;3617:26;;3653:90;3740:1;3729:9;3725:17;3716:6;3653:90;:::i;:::-;3490:260;;;;:::o;3756:442::-;3905:4;3943:2;3932:9;3928:18;3920:26;;3956:71;4024:1;4013:9;4009:17;4000:6;3956:71;:::i;:::-;4037:72;4105:2;4094:9;4090:18;4081:6;4037:72;:::i;:::-;4119;4187:2;4176:9;4172:18;4163:6;4119:72;:::i;:::-;3756:442;;;;;;:::o;4204:90::-;4238:7;4281:5;4274:13;4267:21;4256:32;;4204:90;;;:::o;4300:116::-;4370:21;4385:5;4370:21;:::i;:::-;4363:5;4360:32;4350:60;;4406:1;4403;4396:12;4350:60;4300:116;:::o;4422:137::-;4476:5;4507:6;4501:13;4492:22;;4523:30;4547:5;4523:30;:::i;:::-;4422:137;;;;:::o;4565:345::-;4632:6;4681:2;4669:9;4660:7;4656:23;4652:32;4649:119;;;4687:79;;:::i;:::-;4649:119;4807:1;4832:61;4885:7;4876:6;4865:9;4861:22;4832:61;:::i;:::-;4822:71;;4778:125;4565:345;;;;:::o;4916:332::-;5037:4;5075:2;5064:9;5060:18;5052:26;;5088:71;5156:1;5145:9;5141:17;5132:6;5088:71;:::i;:::-;5169:72;5237:2;5226:9;5222:18;5213:6;5169:72;:::i;:::-;4916:332;;;;;:::o;5254:180::-;5302:77;5299:1;5292:88;5399:4;5396:1;5389:15;5423:4;5420:1;5413:15;5440:191;5480:3;5499:20;5517:1;5499:20;:::i;:::-;5494:25;;5533:20;5551:1;5533:20;:::i;:::-;5528:25;;5576:1;5573;5569:9;5562:16;;5597:3;5594:1;5591:10;5588:36;;;5604:18;;:::i;:::-;5588:36;5440:191;;;;:::o;5637:108::-;5714:24;5732:5;5714:24;:::i;:::-;5709:3;5702:37;5637:108;;:::o;5751:91::-;5787:7;5827:8;5820:5;5816:20;5805:31;;5751:91;;;:::o;5848:105::-;5923:23;5940:5;5923:23;:::i;:::-;5918:3;5911:36;5848:105;;:::o;5959:108::-;6036:24;6054:5;6036:24;:::i;:::-;6031:3;6024:37;5959:108;;:::o;6073:::-;6150:24;6168:5;6150:24;:::i;:::-;6145:3;6138:37;6073:108;;:::o;6281:1623::-;6456:6;6451:3;6447:16;6548:4;6541:5;6537:16;6531:23;6567:63;6624:4;6619:3;6615:14;6601:12;6567:63;:::i;:::-;6473:167;6726:4;6719:5;6715:16;6709:23;6745:63;6802:4;6797:3;6793:14;6779:12;6745:63;:::i;:::-;6650:168;6899:4;6892:5;6888:16;6882:23;6918:61;6973:4;6968:3;6964:14;6950:12;6918:61;:::i;:::-;6828:161;7076:4;7069:5;7065:16;7059:23;7095:63;7152:4;7147:3;7143:14;7129:12;7095:63;:::i;:::-;6999:169;7254:4;7247:5;7243:16;7237:23;7273:63;7330:4;7325:3;7321:14;7307:12;7273:63;:::i;:::-;7178:168;7432:4;7425:5;7421:16;7415:23;7451:63;7508:4;7503:3;7499:14;7485:12;7451:63;:::i;:::-;7356:168;7618:4;7611:5;7607:16;7601:23;7637:63;7694:4;7689:3;7685:14;7671:12;7637:63;:::i;:::-;7534:176;7805:4;7798:5;7794:16;7788:23;7824:63;7881:4;7876:3;7872:14;7858:12;7824:63;:::i;:::-;7720:177;6425:1479;6281:1623;;:::o;7910:379::-;8081:4;8119:3;8108:9;8104:19;8096:27;;8133:149;8279:1;8268:9;8264:17;8255:6;8133:149;:::i;:::-;7910:379;;;;:::o;8295:143::-;8352:5;8383:6;8377:13;8368:22;;8399:33;8426:5;8399:33;:::i;:::-;8295:143;;;;:::o;8444:351::-;8514:6;8563:2;8551:9;8542:7;8538:23;8534:32;8531:119;;;8569:79;;:::i;:::-;8531:119;8689:1;8714:64;8770:7;8761:6;8750:9;8746:22;8714:64;:::i;:::-;8704:74;;8660:128;8444:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "394400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "351",
								"swapExactInputSingle(address,address,uint256,uint256,address)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 613,
									"end": 693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 613,
									"end": 693,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 674,
									"end": 685,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 661,
									"end": 685,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 661,
									"end": 685,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 661,
									"end": 685,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 661,
									"end": 685,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 613,
									"end": 693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "198"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2568,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7b222402c618dcdd6fe628628af6ba590c1dd92ff3468b0899be1628048e8cc64736f6c634300081a0033",
									".code": [
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "4AA4A4FC"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "59953F16"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "C31C9C07"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 2568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 800,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 800,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 800,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 344,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 344,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 494,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 454,
											"end": 537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1349,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1399,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1335,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1335,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1537,
											"end": 1547,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1550,
											"end": 1558,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1505,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1505,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1799,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1880,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "PUSH",
											"source": 3,
											"value": "BB8"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 2116,
											"end": 2131,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2116,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2116,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 2439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 2439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 2439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "414BF389"
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2522,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2522,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 344,
											"end": 383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1728,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1713,
											"end": 1722,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1711,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1729,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 1813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1732,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1732,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1732,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1813,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1877,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2005,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2078,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2261,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2314,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2261,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2314,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2206,
											"end": 2324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2366,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2390,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2390,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2390,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2584,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2466,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2553,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2577,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2553,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2787,
											"end": 2804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2734,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2805,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2734,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2878,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2818,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 3026,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2884,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3012,
											"end": 3017,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2994,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3020,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2967,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 3020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 3026,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 3026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 3026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 3026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3158,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3032,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3146,
											"end": 3151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3115,
											"end": 3152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3152,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3115,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3309,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3164,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3297,
											"end": 3302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3266,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3303,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3266,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3471,
											"end": 3476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3421,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3477,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3421,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3653,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3743,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3653,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4024,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3956,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 4027,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3956,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4037,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4109,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4037,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4119,
											"end": 4191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4191,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4119,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4294,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4204,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4287,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4256,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4256,
											"end": 4288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4300,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4385,
											"end": 4390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4370,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4391,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4370,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4392,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4501,
											"end": 4514,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4547,
											"end": 4552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4523,
											"end": 4553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4553,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4523,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4667,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4684,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4649,
											"end": 4768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4687,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4687,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4766,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4687,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4649,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4885,
											"end": 4892,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 4874,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4861,
											"end": 4883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4832,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4893,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4832,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4893,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4778,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5064,
											"end": 5073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5088,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5159,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5088,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5226,
											"end": 5235,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5219,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5169,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5241,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5169,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 5248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5254,
											"end": 5434,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5254,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5379,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5499,
											"end": 5519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5519,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5499,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5551,
											"end": 5552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5533,
											"end": 5553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5553,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5601,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5624,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5588,
											"end": 5624,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5604,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5624,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5588,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5732,
											"end": 5737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5714,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5714,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5709,
											"end": 5712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5702,
											"end": 5739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5842,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5751,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5835,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5953,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5848,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5940,
											"end": 5945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5923,
											"end": 5946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5946,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5923,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5911,
											"end": 5947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6067,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5959,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6054,
											"end": 6059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6036,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6034,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6168,
											"end": 6173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6150,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6281,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6546,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6537,
											"end": 6553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6619,
											"end": 6622,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6615,
											"end": 6629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6567,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6726,
											"end": 6730,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6724,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 6732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6802,
											"end": 6806,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6745,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6899,
											"end": 6903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 6971,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6918,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6918,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7080,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7069,
											"end": 7074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7157,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 7095,
											"end": 7158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6999,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7254,
											"end": 7258,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7247,
											"end": 7252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7237,
											"end": 7260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7319,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7273,
											"end": 7336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7178,
											"end": 7346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 7425,
											"end": 7430,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7415,
											"end": 7438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7451,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7514,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7451,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7618,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7624,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7694,
											"end": 7698,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 7683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7637,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7805,
											"end": 7809,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7798,
											"end": 7803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7876,
											"end": 7879,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7858,
											"end": 7870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 7824,
											"end": 7887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7887,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 7824,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7720,
											"end": 7897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 7904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8108,
											"end": 8117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8096,
											"end": 8123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8096,
											"end": 8123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8133,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8133,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 8133,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8133,
											"end": 8282,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8133,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8377,
											"end": 8390,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 8399,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8551,
											"end": 8560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8542,
											"end": 8549,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8534,
											"end": 8566,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 8531,
											"end": 8650,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8531,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8531,
											"end": 8650,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8569,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8569,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 8569,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8569,
											"end": 8648,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8569,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8531,
											"end": 8650,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8531,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8770,
											"end": 8777,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8767,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8714,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8778,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8714,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8778,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8444,
											"end": 8795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"simpletokenswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"swapExactInputSingle(address,address,uint256,uint256,address)": "59953f16",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simpletokenswap.sol\":\"SimpleTokenSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"simpletokenswap.sol\":{\"keccak256\":\"0xb12c28da0bafe459d479e3c9e0d8847625145d97900cd5c830be51791c04e47a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59a11d9400c83fbb944c3a47f87cde76547d9531f9dd383f18bad5322f996f27\",\"dweb:/ipfs/QmR3uJpvrdcBNezTzXu3L2ThcUNdR3a2yHQ3AiQ8V3Xa8F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"simpletokenswap.sol": {
				"ast": {
					"absolutePath": "simpletokenswap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SimpleTokenSwap": [
							283
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 78,
							"src": "110:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 192,
							"src": "214:68:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleTokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "SimpleTokenSwap",
							"nameLocation": "319:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 198,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "373:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 283,
									"src": "344:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 197,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 196,
											"name": "ISwapRouter",
											"nameLocations": [
												"344:11:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "344:11:3"
										},
										"referencedDeclaration": 191,
										"src": "344:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 204,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "478:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 283,
									"src": "454:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 199,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
												"id": 202,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "486:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "486:51:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "650:43:3",
										"statements": [
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "661:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "674:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "661:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "661:24:3"
											}
										]
									},
									"id": 215,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "637:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "625:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 205,
														"name": "ISwapRouter",
														"nameLocations": [
															"625:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "625:11:3"
													},
													"referencedDeclaration": 191,
													"src": "625:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:25:3"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:0:3"
									},
									"scope": 283,
									"src": "613:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1246:1319:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1364:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1368:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1364:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1384:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleTokenSwap_$283",
																		"typeString": "contract SimpleTokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleTokenSwap_$283",
																		"typeString": "contract SimpleTokenSwap"
																	}
																],
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1376:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1391:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 231,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1342:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 230,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1335:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1335:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1351:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1335:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1335:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1335:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 249,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1537:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1529:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1529:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1529:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1550:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 244,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1512:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 243,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1505:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1505:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1521:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1505:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1505:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1505:54:3"
											},
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1707:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "1665:48:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 257,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 256,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1665:11:3",
																	"1677:22:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1665:34:3"
															},
															"referencedDeclaration": 115,
															"src": "1665:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [
														{
															"id": 261,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1792:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1872:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1943:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"id": 264,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2030:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 265,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2116:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2122:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2116:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3135",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2134:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "2116:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 269,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2215:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 270,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "2301:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 259,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1729:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1741:22:3",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1729:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1783:7:3",
														"1862:8:3",
														"1938:3:3",
														"2019:9:3",
														"2106:8:3",
														"2205:8:3",
														"2283:16:3",
														"2371:17:3"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1729:710:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1665:774:3"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2510:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 277,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2550:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 275,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2522:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2533:16:3",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "2522:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2522:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2510:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2510:47:3"
											}
										]
									},
									"functionSelector": "59953f16",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "809:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "848:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "840:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "919:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "911:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "988:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "980:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1047:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1039:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1144:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1136:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:379:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1235:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1227:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:19:3"
									},
									"scope": 283,
									"src": "800:1765:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 284,
							"src": "310:2258:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2537:3"
				},
				"id": 3
			}
		}
	}
}